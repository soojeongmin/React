{"ast":null,"code":"var _jsxFileName = \"/Users/soojeong/React/todo-app-optimize/src/App.js\",\n  _s = $RefreshSig$();\nimport TodoInsert from \"./components/TodoInsert\";\nimport TodoTemplate from \"./components/TodoTemplate\";\nimport TodoList from \"./components/TodoList\";\nimport { useRef, useCallback, useReducer } from 'react';\nimport { produce } from 'immer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst createBulk = () => {\n  const todoArray = [];\n  for (let i = 1; i <= 2500; i++) {\n    const todo = {\n      id: i,\n      text: `할 일 ${i}`,\n      checked: false\n    };\n    todoArray.push(todo);\n  }\n  return todoArray;\n};\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'INSERT':\n      return state.concat(action.todo);\n    case 'REMOVE':\n      return state.filter(todo => todo.id !== action.id);\n    case 'TOGGLE':\n      return state.map(todo => todo.id === action.id ? {\n        ...todo,\n        checked: !todo.checked\n      } : todo);\n  }\n};\nfunction App() {\n  _s();\n  const [todos, dispatch] = useReducer(createBulk);\n  const todoId = useRef(2501);\n\n  // 할 일을 추가하는 메소드\n  const addTodo = useCallback(text => {\n    const newTodo = {\n      id: todoId.current,\n      text: text,\n      checked: false\n    };\n    setTodos(() => todos.concat(newTodo));\n    todoId.current += 1;\n  }, [todos]);\n\n  // 최적화2: setter 메소드의 매개변수로 화살표함수 전달.\n  const removeTodo = useCallback(id => {\n    setTodos(() => todos.filter(todo => todo.id !== id));\n  }, [todos]);\n\n  // 최적화2: setter 메소드의 매개변수로 화살표함수 전달.\n  const changeChecked = useCallback(id => {\n    setTodos(\n    // setter 메소드에 화살표함수를 매개변수로 전달하면서\n    // 화살표함수의 매개변수를 선언하면 해당 매개변수는\n    // state의 이전상태를 가져오는 매개변수가 된다.\n    prev => todos.map(todo => todo.id === id ? {\n      ...todo,\n      checked: !todo.checked\n    } : todo));\n  }, [todos]);\n  return /*#__PURE__*/_jsxDEV(TodoTemplate, {\n    children: [/*#__PURE__*/_jsxDEV(TodoInsert, {\n      addTodo: addTodo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TodoList, {\n      todos: todos,\n      removeTodo: removeTodo,\n      changeChecked: changeChecked\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"XtiHzWeMtcIF5WuYwON8plluuEo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["TodoInsert","TodoTemplate","TodoList","useRef","useCallback","useReducer","produce","jsxDEV","_jsxDEV","createBulk","todoArray","i","todo","id","text","checked","push","reducer","state","action","type","concat","filter","map","App","_s","todos","dispatch","todoId","addTodo","newTodo","current","setTodos","removeTodo","changeChecked","prev","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/soojeong/React/todo-app-optimize/src/App.js"],"sourcesContent":["import TodoInsert from \"./components/TodoInsert\";\nimport TodoTemplate from \"./components/TodoTemplate\";\nimport TodoList from \"./components/TodoList\";\nimport {useRef, useCallback, useReducer} from 'react';\nimport {produce} from 'immer';\n\nconst createBulk = () => {\n  const todoArray = [];\n\n  for(let i=1;i<=2500;i++){\n    const todo = {\n      id: i,\n      text: `할 일 ${i}`,\n      checked: false\n    }\n\n    todoArray.push(todo);\n  }\n\n  return todoArray;\n}\n\nconst reducer = (state, action)  => {\n  switch(action.type) {\n    case 'INSERT':\n      return state.concat(action.todo);\n    case 'REMOVE':\n      return state.filter(todo=>todo.id!==action.id);\n    case 'TOGGLE':\n      return state.map(todo=>\n        todo.id === action.id\n        ? {...todo, checked: !todo.checked}\n        : todo\n      )\n  }\n}\n\nfunction App() {\n  const [todos, dispatch] = useReducer(createBulk);\n\n  const todoId = useRef(2501);\n\n  // 할 일을 추가하는 메소드\n  const addTodo = useCallback((text) => {\n    const newTodo = {\n      id: todoId.current,\n      text: text,\n      checked: false,\n    }\n\n    setTodos(\n      () => todos.concat(newTodo)\n    );\n\n    todoId.current += 1;\n  }, [todos]);\n\n  // 최적화2: setter 메소드의 매개변수로 화살표함수 전달.\n  const removeTodo = useCallback((id) => {\n    setTodos(\n      () => todos.filter(todo=> todo.id!== id)\n    );\n  }, [todos]);\n\n  // 최적화2: setter 메소드의 매개변수로 화살표함수 전달.\n  const changeChecked = useCallback((id) => {\n    setTodos(\n      // setter 메소드에 화살표함수를 매개변수로 전달하면서\n      // 화살표함수의 매개변수를 선언하면 해당 매개변수는\n      // state의 이전상태를 가져오는 매개변수가 된다.\n      (prev) => todos.map(\n        todo => todo.id === id\n        ? {...todo, checked: !todo.checked}\n        : todo\n      )\n    )\n  }, [todos]);\n\n  return (\n    <TodoTemplate>\n      <TodoInsert addTodo={addTodo}/>\n      <TodoList todos={todos} removeTodo={removeTodo} changeChecked={changeChecked}/>\n    </TodoTemplate>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}